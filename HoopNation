



local a=game:GetService('Players')local b=game:GetService('Workspace')local c=game:GetService('RunService')local d=game:GetService('ReplicatedStorage')local e=game:GetService('UserInputService')local f=a.LocalPlayer;local g=f.Character or f.CharacterAdded:Wait()local h=g.HumanoidRootPart;local i=b.CurrentCamera;local i=b:FindFirstChild("Basketballs")local b=b:FindFirstChild("Courts")local i=f.Values.Stamina;local j=f.Values.Ankles;local j=f.Values.Sprinting;local j=f.Values.Shooting;local j=game:GetService("ReplicatedStorage").Events.Shoot;local j=d.Assets.Clothing.Shirts;local k=d.Assets.Clothing.Pants;local l={}local m={}for a,a in next,(j:GetChildren())do if a:IsA("Folder")or a:IsA("Model")or a:IsA("Shirt")then table.insert(l,a.Name)end end;for a,a in next,(k:GetChildren())do if a:IsA("Folder")or a:IsA("Model")or a:IsA("Pants")and a.Name~='Clothing'then table.insert(m,a.Name)end end;table.sort(l)table.sort(m)local j=f.Character.Stats.Gamepasses or nil;local k=f.Character.Head.Nametag.NameLabel or nil;local k;local k=tick()local n=0;local o=60;local p;local q={Snapline=Drawing.new("Line"),SnaplineOutline=Drawing.new("Line")}q.Snapline.Thickness=1;q.Snapline.Color=Color3.fromRGB(255,255,255)q.SnaplineOutline.Color=Color3.fromRGB(0,0,0)q.Snapline.ZIndex=2;q.SnaplineOutline.Thickness=1.1;local r={onKeyPress=function(a,b)if b then return end;if a.KeyCode==Enum.KeyCode.E and Toggles.AutoGreenToggle.Value then if Options.AutoGreenTypeDropdown.Value=="Function"then p(true)task.wait(0.40)p(false)elseif Options.AutoGreenTypeDropdown.Value=="Remote"then task.wait(0.40)d:FindFirstChild("Events"):FindFirstChild("Shoot"):FireServer(false,-0.99,true)task.wait(0.40)end end end,increaseGreatestComponent=function(a,b)local c=math.abs(a.X)local d=math.abs(a.Y)local e=math.abs(a.Z)local e=math.max(c,d,e)if e==c then return Vector3.new(a.X+math.sign(a.X)*b,a.Y,a.Z)elseif e==d then return Vector3.new(a.X,a.Y+math.sign(a.Y)*b,a.Z)else return Vector3.new(a.X,a.Y,a.Z+math.sign(a.Z)*b)end end,FindClosestBasketball=function(a)local c=f.Character;if not c or not c:FindFirstChild("HumanoidRootPart")then return nil end;if game.Workspace.Basketballs:FindFirstChildOfClass("MeshPart")then if(g.HumanoidRootPart.Position-game.Workspace.Basketballs:FindFirstChildOfClass("MeshPart").Position).Magnitude<=a then local a=game.Workspace.Basketballs.Basketball;return a end else for b,b in ipairs(b:GetChildren())do local c=b:FindFirstChild("Values")if c then for c,c in ipairs(c:GetChildren())do if c.Value==f.Name then print("Found court for player:",f.Name)local b=b:FindFirstChild("Basketball")if b and(g.HumanoidRootPart.Position-b.Position).Magnitude<=a then return b end end end end end end;return nil end}r.getClosestPlayer=function(b)local c=nil;local b=b;for a,a in next,(a:GetPlayers())do if a~=f and a.Character and a.Character:FindFirstChild("HumanoidRootPart")then local d=a.Character:FindFirstChild("HumanoidRootPart")if d then local d=(h.Position-d.Position).magnitude;if d<b then b=d;c=a end end end end;return c end;r.updateSnapline=function()local a=r.getClosestPlayer(Options.MaxDistance.Value)if a and a.Character then local a=a.Character:FindFirstChild("HumanoidRootPart")if a then local b=game.Workspace.CurrentCamera;local a,c=b:WorldToViewportPoint(a.Position)if not q.Snapline then q.Snapline=Drawing.new("Line")end;if not q.SnaplineOutline then q.SnaplineOutline=Drawing.new("Line")end;if c then local a,c=math.floor(a.X),math.floor(a.Y)q.Snapline.Visible=true;q.Snapline.From=Vector2.new(b.ViewportSize.X/2,b.ViewportSize.Y-b.ViewportSize.Y)q.Snapline.To=Vector2.new(a,c)q.SnaplineOutline.Visible=true;q.SnaplineOutline.From=Vector2.new(b.ViewportSize.X/2,b.ViewportSize.Y-b.ViewportSize.Y)q.SnaplineOutline.To=Vector2.new(a,c)else q.Snapline.Visible=false;q.SnaplineOutline.Visible=false end else q.Snapline.Visible=false;q.SnaplineOutline.Visible=false end else q.Snapline.Visible=false;q.SnaplineOutline.Visible=false end end;r.getHoopPosition=function()local a=game.Workspace:FindFirstChild("Hoop")local c=game.Workspace:FindFirstChild("Hoop2")if a and c and a:FindFirstChild("Goal")and c:FindFirstChild("Goal")then local a=a.Goal.Position;local b=c.Goal.Position;local c=f.Character and f.Character:FindFirstChild("HumanoidRootPart")and f.Character.HumanoidRootPart.Position;if c then local d=(c-a).Magnitude;local c=(c-b).Magnitude;if d<c then return a else return b end end else for a,a in next,(b:GetChildren())do local b=a:FindFirstChild("Values")if b then for b,b in next,(b:GetChildren())do if b.Value==f.Name then local a=a:FindFirstChild("Hoop")if a and a:FindFirstChild("Goal")then return a.Goal.Position end end end end end end;return nil end;r.teleportToDefensivePosition=function(a)if not e:IsKeyDown(Enum.KeyCode.G)then return end;local a=r.getClosestPlayer(a)local b=r.getHoopPosition()if a and a.Character and a.Character:FindFirstChild("HumanoidRootPart")and b then local a=a.Character.HumanoidRootPart;local c=Options.PredictionAmount.Value;local c=a.Position+(a.Velocity*c)local b=(c-b).unit;local b=c-(b*3.25)b=Vector3.new(b.X,a.Position.Y,b.Z)h.CFrame=CFrame.new(b,a.Position)d:FindFirstChild("Events"):FindFirstChild("Guard"):FireServer(true)end end;r.AutoBlock=function()local a=r.getClosestPlayer(15)if a then if a.Values.Shooting.Value==true then task.wait()d:FindFirstChild("Events"):FindFirstChild("Block"):FireServer()end end end;local a={WatermarkConnection=nil,AutoGreenInput=nil,InfiniteStamina=nil,DribblingGlide=nil,PickupRange=nil,WalkSpeed=nil,JumpPower=nil,HipHeight=nil,AutoBlock=nil,AutoGuard=nil,UpdateSnapline=nil,SpinbotConnection=nil}for a,a in next,getgc(false)do if(type(a)=='function'and not isexecutorclosure(a)and debug.getinfo(a).name and debug.getinfo(a).name=="Shoot")then p=a end end;local b='https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'local h=loadstring(game:HttpGet('https://raw.githubusercontent.com/Zyai-Lua/Inertia.mov/refs/heads/main/Linoria'))()local p=loadstring(game:HttpGet('https://raw.githubusercontent.com/Zyai-Lua/Inertia.mov/refs/heads/main/LinoriaTheme'))()local b=loadstring(game:HttpGet(b..'addons/SaveManager.lua'))()local s=h:CreateWindow({Title='Inertia | <font color=\"#00ff00\">Free</font> | Hoop Nation V2',Center=true,AutoShow=true,TabPadding=8,MenuFadeTime=0.2})local s={Main=s:AddTab('Main'),['UI Settings']=s:AddTab('UI Settings')}local t=s.Main:AddLeftGroupbox('Main')local u=s.Main:AddLeftGroupbox('Unlocks')local v=s.Main:AddRightGroupbox('Player')u:AddDropdown('ShirtDropdown',{Values=l,Default=1,Multi=false,Text='Select a Shirt',Tooltip='Choose a clothing item',Callback=function(a)local b=d.Assets.Clothing.Shirts:FindFirstChild(a)if b and b:IsA("Shirt")then local a=b.ShirtTemplate;local b=f.Character;if b then local c=b:FindFirstChildOfClass("Shirt")if not c then c=Instance.new("Shirt")c.Parent=b end;c.ShirtTemplate=a end else warn("Shirt not found or invalid shirt object:",a)end end})u:AddDropdown('PantDropdown',{Values=m,Default=1,Multi=false,Text='Select a Pant',Tooltip='Choose a clothing item',Callback=function(a)local b=d.Assets.Clothing.Pants:FindFirstChild(a)if b and b:IsA("Pants")then local a=b.PantsTemplate;local b=f.Character;if b then local c=b:FindFirstChildOfClass("Pants")if not c then c=Instance.new("Pants")c.Parent=b end;c.PantsTemplate=a end else warn("Pants not found or invalid pants object:",a)end end})local d=u:AddButton({Text='Unlock Gamepasses',Func=function()if j then for a,a in next,(j:GetChildren())do a.Value=true end else Libray:Notify("Could not find character, make sure you are loaded in!")j=f.Character.Stats.Gamepasses or nil end end,DoubleClick=false,Tooltip='Unlocks gamepasses like dunk packs for free'})t:AddToggle('AutoGreenToggle',{Text='Auto Green',Default=false,Tooltip='works for both meter types',Callback=function(b)Toggles.AutoGreenToggle.Value=b;if b then if not a.AutoGreenInput then a.AutoGreenInput=e.InputBegan:Connect(r.onKeyPress)end else if a.AutoGreenInput then a.AutoGreenInput:Disconnect()a.AutoGreenInput=nil end end end})t:AddDropdown('AutoGreenTypeDropdown',{Values={'Function','Remote'},Default=1,Multi=false,Text='Method',Tooltip='All of them should work but if one does not try a different one!',Callback=function(a)Options.AutoGreenTypeDropdown.Value=a end})t:AddToggle('AutoGuard',{Text='Auto Guard (BLATANT)',Default=false,Tooltip='Automatically guards closest player with a basketball',Callback=function(b)Toggles.AutoGuard.Value=b;if b then if not a.AutoGuard then a.AutoGuard=c.RenderStepped:Connect(function()r.teleportToDefensivePosition(Options.MaxDistance.Value)end)end else if a.AutoGuard then a.AutoGuard:Disconnect()a.AutoGuard=nil end end end})t:AddLabel('Hold G When you want to Auto Guard.')t:AddSlider('PredictionAmount',{Text='Offset',Default=0.5,Min=0,Max=3,Rounding=2,Compact=false,Callback=function(a)Options.PredictionAmount.Value=a end})t:AddSlider('MaxDistance',{Text='Distance',Default=15,Min=0,Max=100,Rounding=2,Compact=false,Callback=function(a)Options.MaxDistance.Value=a end})t:AddToggle('Indicator',{Text='Indicator',Default=false,Tooltip='Shows the closest guarded player!',Callback=function(b)Toggles.Indicator.Value=b;if b then if not a.UpdateSnapline then a.UpdateSnapline=c.RenderStepped:Connect(r.updateSnapline)end else if a.UpdateSnapline then a.UpdateSnapline:Disconnect()a.UpdateSnapline=nil;q.Snapline.Visible=false;q.SnaplineOutline.Visible=false end end end}):AddColorPicker('IndicatorColor',{Default=Color3.new(1,1,1),Title='IndicatorColor',Transparency=0,Callback=function(a)q.Snapline.Color=a end})t:AddToggle('AutoBlockToggle',{Text='Auto Block',Default=false,Tooltip='Automatically blocks when a person shoots',Callback=function(b)Toggles.AutoBlockToggle.Value=b;if b then if not a.AutoBlock then a.AutoBlock=c.RenderStepped:Connect(r.AutoBlock)end else if a.AutoBlock then a.AutoBlock:Disconnect()a.AutoBlock=nil end end end})v:AddToggle('WalkSpeedToggle',{Text='Walk Speed',Default=false,Tooltip='Enables Walk Speed',Callback=function(b)Toggles.WalkSpeedToggle.Value=b;if b then if not a.WalkSpeed then a.WalkSpeed=c.RenderStepped:Connect(function()g:FindFirstChildOfClass("Humanoid").WalkSpeed=Options.WalkSpeedSlider.Value end)end else if a.WalkSpeed then a.WalkSpeed:Disconnect()a.WalkSpeed=nil end end end})v:AddSlider('WalkSpeedSlider',{Text='Amount',Default=11,Min=11,Max=100,Rounding=2,Compact=false,Callback=function(a)Options.WalkSpeedSlider.Value=a end})v:AddToggle('JumpPowerToggle',{Text='Jump Power',Default=false,Tooltip='Enables Jump Power',Callback=function(a)Toggles.JumpPowerToggle.Value=a;if a then g:FindFirstChildOfClass("Humanoid").JumpPower=Options.JumpPowerSlider.Value else g:FindFirstChildOfClass("Humanoid").JumpPower=0 end end})v:AddSlider('JumpPowerSlider',{Text='Amount',Default=0,Min=0,Max=50,Rounding=2,Compact=false,Callback=function(a)Options.JumpPowerSlider.Value=a;if Toggles.JumpPowerToggle.Value then g:FindFirstChildOfClass("Humanoid").JumpPower=Options.JumpPowerSlider.Value else g:FindFirstChildOfClass("Humanoid").JumpPower=0 end end})v:AddToggle('HipHeightToggle',{Text='Hip Height',Default=false,Tooltip='Enables Hip Height',Callback=function(a)Toggles.HipHeightToggle.Value=a;if a then g:FindFirstChildOfClass("Humanoid").HipHeight=Options.HipHeightSlider.Value else g:FindFirstChildOfClass("Humanoid").HipHeight=2 end end})v:AddSlider('HipHeightSlider',{Text='Amount',Default=2,Min=2,Max=20,Rounding=2,Compact=false,Callback=function(a)Options.HipHeightSlider.Value=a;if Toggles.HipHeightToggle.Value then g:FindFirstChildOfClass("Humanoid").HipHeight=Options.HipHeightSlider.Value else g:FindFirstChildOfClass("Humanoid").HipHeight=2 end end})v:AddToggle('InfiniteStaminaToggle',{Text='Infinite Stamina',Default=false,Tooltip='inf stamina',Callback=function(b)Toggles.InfiniteStaminaToggle.Value=b;if b then if not a.InfiniteStamina then a.InfiniteStamina=i:GetPropertyChangedSignal("Value"):Connect(function(a)i.Value=1 end)end else if a.InfiniteStamina then a.InfiniteStamina:Disconnect()a.InfiniteStamina=nil end end end})v:AddToggle('DribbleGlideToggle',{Text='Dribble Glide',Default=false,Tooltip='dribbel glide',Callback=function(b)Toggles.DribbleGlideToggle.Value=b;if b then if not a.DribblingGlide then a.DribblingGlide=f.Values.Dribbling:GetPropertyChangedSignal("Value"):Connect(function()task.wait(0.3)local a=f.Character.HumanoidRootPart;local a=a.BodyVelocity;local b=r.increaseGreatestComponent(a.Velocity,Options.GlideAmount.Value)while f.Values.Dribbling.Value==true do a.MaxForce=Vector3.new(99999,0,99999)a.Velocity=b;wait()end;a.Velocity=Vector3.new(0,0,0)a.MaxForce=Vector3.new(0,0,0)end)end else if a.DribblingGlide then a.DribblingGlide:Disconnect()a.DribblingGlide=nil end end end})v:AddSlider('GlideAmount',{Text='Amount',Default=1,Min=1,Max=5,Rounding=1,Compact=false,Callback=function(a)Options.GlideAmount.Value=a end})v:AddToggle('PickupRangeToggle',{Text='Pickup Range',Default=false,Tooltip='Modify the distance in which you can pickup the ball',Callback=function(b)Toggles.PickupRangeToggle.Value=b;if b then if not a.PickupRange then a.PickupRange=c.RenderStepped:Connect(function()local a=r.FindClosestBasketball(Options.PickupRangeAmount.Value)if a and not f.Values.Shooting.Value then firetouchinterest(a,g:FindFirstChild("HumanoidRootPart")or g:WaitForChild("HumanoidRootPart",15),true)firetouchinterest(a,g:FindFirstChild("HumanoidRootPart")or g:WaitForChild("HumanoidRootPart",15),false)else return end end)end else if a.PickupRange then a.PickupRange:Disconnect()a.PickupRange=nil end end end})v:AddSlider('PickupRangeAmount',{Text='Amount',Default=10,Min=5,Max=100,Rounding=2,Compact=false,Callback=function(a)Options.PickupRangeAmount.Value=a end})v:AddToggle('Spinbot',{Text="Spinbot",Default=false,Tooltip="Enables Spinbot",Callback=function(b)Toggles.Spinbot.Value=b;if b then if not a.SpinbotConnection then a.SpinbotConnection=c.RenderStepped:Connect(function()if g:FindFirstChild("HumanoidRootPart")then g.HumanoidRootPart.CFrame=g.HumanoidRootPart.CFrame*CFrame.Angles(0,math.rad(20),0)end end)end else if a.SpinbotConnection then a.SpinbotConnection:Disconnect()a.SpinbotConnection=nil end end end})h:SetWatermarkVisibility(true)a.WatermarkConnection=c.RenderStepped:Connect(function()n+=1;if(tick()-k)>=1 then o=n;k=tick()n=0 end;h:SetWatermark(('Inertia | Free | %s fps | %s ms'):format(math.floor(o),math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())))end)h.KeybindFrame.Visible=true;h:OnUnload(function()for a,a in next,a do if a then a:Disconnect()a=nil;g:FindFirstChildOfClass("Humanoid").HipHeight=2 end end;h.Unloaded=true end)local a=s['UI Settings']:AddLeftGroupbox('Menu')a:AddLabel('Made by: Zyai, The')a:AddButton('Copy Discord',function()setclipboard("https://discord.gg/J7A8pzqPYE")end)a:AddButton('Unload',function()h:Unload()end)a:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind',{Default='End',NoUI=true,Text='Menu keybind'})h.ToggleKeybind=Options.MenuKeybind;p:SetLibrary(h)b:SetLibrary(h)b:IgnoreThemeSettings()b:SetIgnoreIndexes({'MenuKeybind'})p:SetFolder('Inertia.mov')b:SetFolder('Inertia.mov/Hoop-Nations')b:BuildConfigSection(s['UI Settings'])p:ApplyToTab(s['UI Settings'])b:LoadAutoloadConfig()h:Notify(("Welcome to Inertia.Mov "..f.Name.." 👋"),6)h:Notify(("Status: 🟢 - Undetected (Safe to use)"),6)
